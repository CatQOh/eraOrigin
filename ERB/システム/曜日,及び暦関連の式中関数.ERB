@ZELLER(年, 月, 日)
#FUNCTION
#DIM DYNAMIC 年
#DIM DYNAMIC 月
#DIM DYNAMIC 日
;曜日を求める公式(ツェラーの公式)
;ARG=年 ARG:1=月 ARG:2=日  に対して「1:日,2:月,3:火,4:水,5:木,6:金,0:土」で返す
;Enter:ARG変数を「年」「月」「日」に置き換え

;1月と2月は前年の13月と14月として扱う
IF 月 < 3
	年--
	月 += 12
ENDIF

;年/100に床関数を通したものをLOCAL:1とする
;負の数の床関数は面倒
LOCAL:1 = 年/100
SIF 年 < 0 && 年%100 != 0
	LOCAL:1--

;年と100を法として合同である値をLOCAL:2とする
;負の数の剰余も面倒
;(-34)%10 は -4と出る
LOCAL:2 = 年%100
SIF 年 < 0 && 年%100 != 0
	LOCAL:2 = 100 + LOCAL:2

;グレゴリオ暦かユリウス暦かによる補正をLOCAL:3とする
IF GREGORIAN(年, 月, 日)
	LOCAL:3 = 5* LOCAL:1 + LOCAL:1 /4
ELSE
	LOCAL:3 = 6* LOCAL:1 +5
ENDIF

;ユリウス暦を間違った運用をしていた期間の補正をLOCAL:4とする
;AD1年〜AD3年は存在しない(けど計算上は存在する)AD4年2月29日のせいで+1を補正する
IF 年 == 1 || 年 == 2 || 年 == 3
	LOCAL:4 = 1
;ここから紀元前
;同様にずれた分の補正をいれる
;例えば、BC45年2月29日は計算上は存在するべきなのに、実際はなかったので-1日分ずらす
ELSEIF 年 <= 0
	;0年を紀元前1年、-1年を紀元前2年、-2年を紀元前3年……とおいて見た目を分かりやすくする
	SELECTCASE ABS(年)+1
		CASE 1, 21, 24, 25, 27 TO 32, 34, 35, 38
			LOCAL:4 = 1
		CASE 2 TO 5, 9, 12, 13, 15 TO 20, 22, 23, 26
			LOCAL:4 = 2
		CASE 6 TO 8, 10, 11, 14
			LOCAL:4 = 3
		;7日ループで-1日は+6日と同じ
		CASE 45
			LOCAL:4 = 6
		CASEELSE
			LOCAL:4 = 0
	ENDSELECT
ENDIF

;求める値をLOCALとおく
;Enter:ウィキペディア風に括弧閉じ
LOCAL = LOCAL:2 + (LOCAL:2 /4) + (26*(1+月)/10) + 日 + LOCAL:3 + LOCAL:4
LOCAL %= 7

RETURNF LOCAL


@GREGORIAN(年, 月, 日)
#FUNCTION
#DIM 年
#DIM 月
#DIM 日
;ARG年 ARG:1月 ARG:2日  にグレゴリオ暦が使われているか
;使われているなら1、そうでないなら0
;グレゴリオ暦は1582年10月15日から施行
;こっちもARGを年月日で置き換え

IF 年 > 1582
	RETURNF 1
ELSEIF 年 == 1582
	IF 月 > 10
		RETURNF 1
	ELSEIF 月 == 10
		IF 日 >= 15
			RETURNF 1
		ELSE
			RETURNF 0
		ENDIF
	ELSE
		RETURNF 0
	ENDIF
ELSE
	RETURNF 0
ENDIF


@DOW(ARG)
#FUNCTIONS
;DOWはday of week(曜日)の略
;「1:日,2:月,3:火,4:水,5:木,6:金,0:土」を出力する
SELECTCASE ARG
	CASE 1
		RETURNF "日"
	CASE 2
		RETURNF "月"
	CASE 3
		RETURNF "火"
	CASE 4
		RETURNF "水"
	CASE 5
		RETURNF "木"
	CASE 6
		RETURNF "金"
	CASE 0
		RETURNF "土"
ENDSELECT

@NO_WEEK, 年 = -1, 月 = -1, 日 = -1
#FUNCTION
#DIM 日
#DIM 月
#DIM 年
SIF 年 == -1
	年 = YEAR
SIF 月 == -1
	月 = MONTH
SIF 日 == -1
	日 = DAYS

;式中関数「NO_WEEK」
;その日が月の何週目かを返す 週始めは日曜日
;引数を省略した場合は今日、今月、今年で計算される

LOCAL = ZELLER(年, 月, 1)

SELECTCASE LOCAL
	CASE 0
		LOCAL = 5
	CASEELSE
		LOCAL -= 2
ENDSELECT

RETURNF (日+LOCAL)/7

@NO_DOW, 週, 曜日, 月 = -1 , 年 = -1
#FUNCTION
#DIMS 曜日
#DIM 週
#DIM 月
#DIM 年
SIF 年 == -1
	年 = YEAR
SIF 月 == -1
	月 = MONTH

;式中関数「NO_DOW」
;当月の指定した第何何曜日が何日かを返す式中関数
;第三引数以降を省略した場合は今月、今年で計算される

SELECTCASE 曜日
	CASE "日"
		LOCAL = 1
	CASE "月"
		LOCAL = 2
	CASE "火"
		LOCAL = 3
	CASE "水"
		LOCAL = 4
	CASE "木"
		LOCAL = 5
	CASE "金"
		LOCAL = 6
	CASE "土"
		LOCAL = 7
ENDSELECT

LOCAL:1 = ZELLER(年, 月, 1)

SELECTCASE LOCAL:1
	CASE 0
		LOCAL:1 = 6
	CASEELSE
		LOCAL:1--
ENDSELECT

IF LOCAL < LOCAL:1+1
	RETURNF LOCAL-LOCAL:1+週*7
ELSE
	RETURNF LOCAL-LOCAL:1+(週-1)*7
ENDIF

@PREMIUM_FRIDAY, 年, 月, 日
#FUNCTION
#DIM DYNAMIC 年
#DIM DYNAMIC 月
#DIM DYNAMIC 日
#DIM DYNAMIC 日数

;式中関数「PREMIUM_FRIDAY」 プレミアムフライデー、それはその月の最終金曜日に行われるハッピーイベントらしい
;引数で指定した日がプレミアムフライデーかどうかを判別
;プレミアムフライデーなら1を返す 引数の省略は非推奨

;そもそも金曜日じゃなければ終了
SIF DOW(ZELLER(年, 月, 日)) != "金"
	RETURNF 0

;21日以前なら次週が必ずあるので終了
SIF 日 <= 21
	RETURNF 0

;プレミアムフライデーの施行日は2017年2月24日なのでそれ以前なら終了
SIF 年 < 2017 || (年 == 2017 && 月 < 2) || (年 == 2017 && 月 == 2 && 日 < 24)
	RETURNF 0

;その月の日数を計算
SELECTCASE MONTH
	CASE 1, 3, 5, 7, 8, 10, 12
		日数 = 31
	CASE 4, 6, 9, 11
		日数 = 30
	CASE 2
		;うるう年かどうかで場合分け
		IF (YEAR%4 == 0 && YEAR%100 != 0) || YEAR%400 == 0
			日数 = 29
		ELSE
			日数 = 28
		ENDIF
ENDSELECT

;ここまで来たということは金曜日が確定してるので、日数-指定日が7以上なら次週があるのでプレミアムフライデーではない
SIF 日数 - 日 >= 7
	RETURNF 0

;上の処理を抜けてきたならプレミアムフライデー
RETURNF 1

